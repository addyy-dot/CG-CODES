#include <windows.h>      // For Sleep
#include <GL/glut.h>
#include <cmath>          // For pow

int points[4][2];
int pointcount=0;

void init(){
glClear(GL_COLOR_BUFFER_BIT);
glClearColor(0.0,0.0,0.0,1.0);
glPointSize(2.0f);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0,600,0,480);
}

void display(){}

void drawpoint(int x,int y){
glColor3f(1.0,0.0,0.0);
glBegin(GL_POINTS);
glVertex2f(x,y);
glEnd();
glFlush();
}

void drawline(int x1,int y1,int x2,int y2){
glBegin(GL_LINES);
glVertex2f(x1,y1);
glVertex2f(x2,y2);
glEnd();
glFlush();
}

void curve(float t,int &x,int &y){
    float u=1-t;
    float b1=u*u*u;
    float b2=3*t*u*u;
    float b3=3*t*t*u;
    float b4=t*t*t;
    x=b1*points[0][0]+b2*points[1][0]+b3*points[2][0]+b4*points[3][0];
    y=b1*points[0][1]+b2*points[1][1]+b3*points[2][1]+b4*points[3][1];
}

void mouseFunc(int button,int state,int x,int y){
    if(button == GLUT_LEFT_BUTTON && state == GLUT_UP){
        points[pointcount][0]=x;
        points[pointcount][1]=480-y;

        drawpoint(x,480-y);
        if(pointcount>0){
            drawline(points[pointcount-1][0],points[pointcount-1][1],x,480-y);
        }
        pointcount++;
        if(pointcount==4){
                int px=points[0][0];
                int py=points[0][1];
                for(float t=0.0;t<1.0;t+=0.02){
                        int cx=0,cy=0;
                    glColor3f(1.0, 1.0, 0.0);
                    curve(t,cx,cy);
                    drawline(px,py,cx,cy);
                px=cx;
                py=cy;
                }
                pointcount=0;
        }
    }

}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(600, 480);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Bezier Curve (No Point Class)");

    init();
    glutDisplayFunc(display);
    glutMouseFunc(mouseFunc);
    glutMainLoop();
    return 0;
}

#include <GL/glut.h>
#include <cmath>
#include <cstdlib>

#define w 500
#define h 500

GLint centerX, centerY, pointX, pointY;

void setpixel(GLint x, GLint y)
{
    glColor3f(1.0, 0.0, 0.0);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
    glFlush();
}

void initialize()
{
    glClearColor(1.0, 1.0, 0.0, 0.0);
    glClear(GL_COLOR_BUFFER_BIT);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-w / 2, w / 2, -h / 2, h / 2);
}

void choice()
{
    glPointSize(2.0);
    for (int i = -w; i < w; i++) {
        setpixel(0, i);
        setpixel(i, 0);
    }
}

class Circle
{
public:
    void drawCircle(int centerX, int centerY, int x, int y)
    {
        setpixel(centerX + x, centerY + y);
        setpixel(centerX - x, centerY + y);
        setpixel(centerX + x, centerY - y);
        setpixel(centerX - x, centerY - y);
        setpixel(centerX + y, centerY + x);
        setpixel(centerX - y, centerY + x);
        setpixel(centerX + y, centerY - x);
        setpixel(centerX - y, centerY - x);
    }

    void BresenhamCircle()
    {
        int r = sqrt((centerX - pointX) * (centerX - pointX) + (centerY - pointY) * (centerY - pointY));
        int x = 0, y = r;
        int d = 3 - 2 * r;

        drawCircle(centerX, centerY, x, y);
        while (y >= x) {
            x++;
            if (d > 0) {
                y--;
                d = d + 4 * (x - y) + 10;
            }
            else {
                d = d + 4 * x + 6;
            }
            drawCircle(centerX, centerY, x, y);
        }
    }
};

Circle obj;

void keyboard(unsigned char key, int x, int y)
{
    if (key == 27)  // ESC key
        exit(0);
}

void menu(int item)
{
    if (item == 1) {
        obj.BresenhamCircle();
    }
    else if (item == 2) {
        exit(0);
    }
}

void mouse(int button, int state, int x, int y)
{
    if (state == GLUT_DOWN) {
        if (button == GLUT_LEFT_BUTTON) {
            centerX = x - 250;
            centerY = 250 - y;
            glPointSize(2.0);
            setpixel(centerX, centerY);
        }
        else if (button == GLUT_RIGHT_BUTTON) {
            pointX = x - 250;
            pointY = 250 - y;
            setpixel(pointX, pointY);
        }
    }
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitWindowSize(w, h);
    glutInitWindowPosition(100, 0);
    glutCreateWindow("Assignment 3 - Bresenham Circle");
    initialize();
    glutDisplayFunc(choice);
    glutMouseFunc(mouse);
    glutKeyboardFunc(keyboard);
    glutCreateMenu(menu);
    glutAddMenuEntry("CIRCLE", 1);
    glutAddMenuEntry("EXIT", 2);
    glutAttachMenu(GLUT_MIDDLE_BUTTON);
    glutMainLoop();
    return 0;
}

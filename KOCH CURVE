#include<iostream>
#include<GL/glut.h>
#include<stdio.h>
using namespace std;

float x1,x2,y1,y2,n;

void getdata() {
x1=10, y1=12, x2=500,y2=600,n=5;
}
void koch(float x1,float y1,float x2,float y2,float n)
{
  if(n==0) {
    glBegin(GL_LINES);
    glVertex2f(x1,y1);
    glVertex2f(x2,y2);
    glEnd();
  }
  else{
    float deltaX = x2-x1;
    float deltaY = y2-y1;

    float x3 = x1+deltaX/3;
    float y3 = y1+deltaY/3;

    float x4 = x1+2*deltaX/3;
    float y4 = y1+2*deltaY/3;

    float x = x3+(x4-x3)*0.5-(y4-y3)*0.8660;
    float y =y3+(y4-y3)*0.5+(x4-x3)*0.8660;

    koch(x1, y1, x3,y3, n-1);
    koch(x3, y3, x, y, n-1);
    koch(x, y, x4, y4, n-1);
    koch(x4, y4,x2,y2, n-1);


  }
}
void Init()
{
    glClearColor(1.0,1.0,1.0,0.0);
    glColor3f(1.0,0.0,1.0);
    gluOrtho2D(0.0,640.0,0.0,480.0);
}
void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    koch(x1,y1,x2,y2,n);
    glFlush();
}
int main(int argc,char**argv)
{
    getdata();
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowPosition(100,100);
    glutInitWindowSize(640,480);
    glutCreateWindow("koch curve");
    Init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
